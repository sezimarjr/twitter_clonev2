from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import User
from django.core.files.base import ContentFile
from .models import Profile, Follow  # Adicione o Follow aqui
from PIL import Image

# Signal original (cria perfil automaticamente)


@receiver(post_save, sender=User)
def create_profile(sender, instance, created, **kwargs):
    if created:
        Profile.objects.create(user=instance)

# Signal original (salva perfil ap√≥s atualiza√ß√£o)


@receiver(post_save, sender=User)
def save_profile(sender, instance, **kwargs):
    if hasattr(instance, 'profile'):
        instance.profile.save()

# ‚≠ê NOVO SIGNAL (Adiciona m√©todos de follow ao User) ‚≠ê


@receiver(post_save, sender=User)
def add_follow_methods(sender, instance, **kwargs):
    """Adiciona m√©todos de follow/unfollow ao model User."""

    def get_followers(self):
        """Retorna todos os seguidores do usu√°rio."""
        return User.objects.filter(followers__follower=self)

    def get_following(self):
        """Retorna todos que o usu√°rio segue."""
        return User.objects.filter(following__following=self)

    def follow(self, user):
        """Usu√°rio segue outro usu√°rio."""
        if self == user:
            raise ValueError("Voc√™ n√£o pode seguir a si mesmo! ü§¶‚Äç‚ôÇÔ∏è")
        follow, created = Follow.objects.get_or_create(
            follower=self,
            following=user
        )
        return follow

    def unfollow(self, user):
        """Usu√°rio para de seguir outro usu√°rio."""
        Follow.objects.filter(follower=self, following=user).delete()

    def is_following(self, user):
        """Verifica se o usu√°rio segue outro."""
        return Follow.objects.filter(follower=self, following=user).exists()

    # Adiciona os m√©todos ao model User (s√≥ uma vez!)
    if not hasattr(User, 'get_followers'):
        User.add_to_class('get_followers', get_followers)
        User.add_to_class('get_following', get_following)
        User.add_to_class('follow', follow)
        User.add_to_class('unfollow', unfollow)
        User.add_to_class('is_following', is_following)
